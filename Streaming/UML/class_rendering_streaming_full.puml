@startuml
skinparam Shadowing false
skinparam LineType ortho
skinparam ArrowColor black

skinparam class {
    BackgroundColor WhiteSmoke
    BorderColor black
}

class encode_to_movie {
	+encode_to_movie(ostream socket, int in_width, int in_height, int fps)
	+add_frame(char[] pixels)
	+add_instant(char[] audio_stream, int audio_stream_size, int audio_stream_num_samples)
	-{static} int write_packet(char[] buf, int buf_size)
}

streaming_server -- encode_to_movie

class streaming_server {
	+start(ushort port)
	+send_video_frame(char[] pixels)
	+send_audio_interval(char[] audio_stream, int audio_stream_size, int audio_stream_num_samples)
	+generate_key_event(char[] key, bool pressed)
	-send(ostream socket)
}

streaming_server -- ws_server

class ws_server {
	+Endpoint[] endpoints
	+Config config
	+start()
}

class Endpoint {
	+on_open(Connection c)
	+on_close(Connection c, int status, string reason)
	+on_message(Connection c, Message msg)
	+on_error(Connection c, error_code e)
}

ws_server -- Endpoint
ws_server -- Config

class Config {
	+ushort port
	+string address
}

class osd_renderer {
	-osd_window  m_window
	+osd_window assert_window()
	{abstract} +int create()
	{abstract} +render_primitive_list get_primitives()
	{abstract} +int draw(const int update)
	{static} +osd_renderer make_for_type(int mode, osd_window window, int extra_flags)
}

class renderer_sdl2 extends osd_renderer {
	-free_streaming_render()
	-init_streaming_render(int w, int h, int fps)
	
	-SDL_Renderer sdl_renderer
	-SDL_Surface sdl_surface
	-SDL_RWops sdl_buffer

	-char[] sdl_buffer_bytes
	-int sdl_buffer_bytes_length;
	
	+int create()
	+render_primitive_list get_primitives()    
	+int draw(const int update)
	{static} +void init(running_machine machine)
	{static} +void exit()
}

renderer_sdl2 -- SDL_Renderer
renderer_sdl2 -- SDL_Surface
renderer_sdl2 -- SDL_RWops
renderer_sdl2 -- streaming_server

@enduml
